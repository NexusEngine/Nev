#[ Nev: O ]#
Circle :: data {
    radius    num
    position  (num, num)

    area :: () => π * me.radius ^(2)
    double_area :: () => me.radius *= √(2)
}


#[ Nev: N ]#
data Circle
{
    radius    num
    position  (num, num)

    num area() π * me.radius ^(2)
    num double_area() me.radius *= √(2)
}




#[ strict ]#
data Circle
{
    mut radius    f32
    mut position  (f32, f32)
}

num Circle.area() {
    π * me.radius ^(2)
}
mut nil Circle.double_area() {
    me.radius *= √(2)
}


